diff -wpruN '--exclude=*.orig' a~/vendor/stacker/src/lib.rs a/vendor/stacker/src/lib.rs
--- a~/vendor/stacker/src/lib.rs	1970-01-01 00:00:00
+++ a/vendor/stacker/src/lib.rs	1970-01-01 00:00:00
@@ -355,7 +355,7 @@ cfg_if! {
             );
             Some(mi.assume_init().AllocationBase as usize + get_thread_stack_guarantee() + 0x1000)
         }
-    } else if #[cfg(any(target_os = "linux", target_os="solaris", target_os = "netbsd"))] {
+    } else if #[cfg(any(target_os = "linux", target_os = "netbsd"))] {
         unsafe fn guess_os_stack_limit() -> Option<usize> {
             let mut attr = std::mem::MaybeUninit::<libc::pthread_attr_t>::uninit();
             assert_eq!(libc::pthread_attr_init(attr.as_mut_ptr()), 0);
@@ -369,7 +369,7 @@ cfg_if! {
             assert_eq!(libc::pthread_attr_destroy(attr.as_mut_ptr()), 0);
             Some(stackaddr as usize)
         }
-    } else if #[cfg(any(target_os = "freebsd", target_os = "dragonfly"))] {
+    } else if #[cfg(any(target_os = "freebsd", target_os = "dragonfly", target_os="solaris"))] {
         unsafe fn guess_os_stack_limit() -> Option<usize> {
             let mut attr = std::mem::MaybeUninit::<libc::pthread_attr_t>::uninit();
             assert_eq!(libc::pthread_attr_init(attr.as_mut_ptr()), 0);
