
Taken from upstream master branch, can likely be dropped after next update.

commit fa84cbcd49973671d127f75bba433e6063af18e6
Author: Ken Murchison <murch@fastmail.com>
Date:   Tue Jun 23 09:01:53 2020 -0400

    httpd.c: obey 'serverinfo' option when constructing the HTML body of error responses

diff --git a/imap/httpd.c b/imap/httpd.c
index 4ee0e0741..4044fa13d 100644
--- a/imap/httpd.c
+++ b/imap/httpd.c
@@ -3629,7 +3629,7 @@ EXPORTED void error_response(long code, struct transaction_t *txn)
     }
 
     if (txn->error.desc) {
-        const char **hdr, *host = "";
+        const char **hdr, *host = config_servername;
         char *port = NULL;
         unsigned level = 0;
 
@@ -3639,9 +3639,7 @@ EXPORTED void error_response(long code, struct transaction_t *txn)
             host = (char *) hdr[0];
             if ((port = strchr(host, ':'))) *port++ = '\0';
         }
-        else if (config_serverinfo != IMAP_ENUM_SERVERINFO_OFF) {
-            host = config_servername;
-        }
+
         if (!port) {
             port = (buf_len(&saslprops.iplocalport)) ?
                 strchr(buf_cstring(&saslprops.iplocalport), ';')+1 : "";
@@ -3656,10 +3654,14 @@ EXPORTED void error_response(long code, struct transaction_t *txn)
         buf_printf_markup(html, level++, "<body>");
         buf_printf_markup(html, level, "<h1>%s</h1>", error_message(code)+4);
         buf_printf_markup(html, level, "<p>%s</p>", txn->error.desc);
-        buf_printf_markup(html, level, "<hr>");
-        buf_printf_markup(html, level,
-                          "<address>%s Server at %s Port %s</address>",
-                          buf_cstring(&serverinfo), host, port);
+        if (config_serverinfo) {
+            buf_printf_markup(html, level, "<hr>");
+            buf_printf_markup(html, level,
+                              "<address>%s Server at %s Port %s</address>",
+                              (config_serverinfo == IMAP_ENUM_SERVERINFO_ON) ?
+                              buf_cstring(&serverinfo) : "HTTP",
+                              host, port);
+        }
         buf_printf_markup(html, --level, "</body>");
         buf_printf_markup(html, --level, "</html>");
 
